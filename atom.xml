<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>J.Lee&#39;s Town</title>
  
  <subtitle>Life is Fantastic</subtitle>
  <link href="https://www.jaylee.top/atom.xml" rel="self"/>
  
  <link href="https://www.jaylee.top/"/>
  <updated>2021-07-12T14:51:13.459Z</updated>
  <id>https://www.jaylee.top/</id>
  
  <author>
    <name>J.Lee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu18.04</title>
    <link href="https://www.jaylee.top/2021/07/12/%E9%AB%98%E6%95%88%E5%B7%A5%E5%85%B7/Ubuntu%E7%9B%B8%E5%85%B3/Ubuntu18.04%E5%AE%89%E8%A3%85/"/>
    <id>https://www.jaylee.top/2021/07/12/%E9%AB%98%E6%95%88%E5%B7%A5%E5%85%B7/Ubuntu%E7%9B%B8%E5%85%B3/Ubuntu18.04%E5%AE%89%E8%A3%85/</id>
    <published>2021-07-12T14:51:13.459Z</published>
    <updated>2021-07-12T14:51:13.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-16-04"><a href="#Ubuntu-16-04" class="headerlink" title="Ubuntu 16.04"></a>Ubuntu 16.04</h1><h2 id="移动硬盘-Ubuntu-系统安装"><a href="#移动硬盘-Ubuntu-系统安装" class="headerlink" title="移动硬盘 Ubuntu 系统安装"></a>移动硬盘 Ubuntu 系统安装</h2><p><a href="https://www.jaylee.top/2019/12/15/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%B3%A8%E6%84%8F/">16.04见这篇文章</a></p><p><a href="https://www.jianshu.com/p/54d9a3a695cc">18.04安装参考</a></p><h2 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h2><p>/ (根目录) &gt;&gt; / (home目录) &gt;&gt; ~ (当前用户目录) &gt;&gt; /下载 /桌面等</p><h2 id="终端命令"><a href="#终端命令" class="headerlink" title="终端命令"></a>终端命令</h2><p>命令格式:</p><blockquote><p>command  [-options]  [parameter]<br>sudo加在命令前面表示以管理员身份执行,如:<br>sudo apt install/remove/upgrade *<br>sudo apt-get update /upgrade<br>cd (change directory) 相对/绝对路径(~ /)      cd .. 返回上层目录<br>ls (list)/ll<br>rm (remove)  删除之后无法恢复<br>clear<br>mkdir</p></blockquote><a id="more"></a><h1 id="操作系统准备"><a href="#操作系统准备" class="headerlink" title="操作系统准备"></a>操作系统准备</h1><h2 id="安装到移动硬盘"><a href="#安装到移动硬盘" class="headerlink" title="安装到移动硬盘"></a>安装到移动硬盘</h2><p>inference:<a href="https://www.jianshu.com/p/54d9a3a695cc">https://www.jianshu.com/p/54d9a3a695cc</a></p><p>哎,在这种争分夺秒的毕业之际,我竟然也愿意花一个周六来玩这种东西,当作休息好啦. 不过18.04真香.</p><p>我是在新买的SSD中安装系统, 步骤还简单, 就是EFI安装的引导文件我放在了新建的系统的efi分区中了,导致win10每次都默认自己优先启动,所以每次都必须去F12界面选择要进入的系统.</p><ol><li>制作启动盘: 把下载下来的ios文件打开,复制所有文件内容到格式化的新U盘中就好了.</li><li>修改BIOS启动顺序, 让USB先运行, 重启进入U盘里的系统</li><li>安装Ubuntu18.04: 最主要的是分区, efiz主分区100M, /根目录主分区30G, /home目录逻辑分区70G, 引导文件放在了新建的efi分区上</li><li>即可.</li></ol><h2 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h2><ol><li>chrome</li><li>typora</li><li>网易云</li><li>vscode/插件</li><li>git/hexo</li></ol><h2 id="安装ROS-Melodic"><a href="#安装ROS-Melodic" class="headerlink" title="安装ROS Melodic"></a>安装ROS Melodic</h2><p>18.04Ubuntu不能装Kinetic了, 版本不对.未来可能会有一些驱动不支持</p><p>官网：<a href="http://wiki.ros.org/melodic/Installation/Ubuntu#Installation-1">http://wiki.ros.org/melodic/Installation/Ubuntu#Installation-1</a></p><h2 id="安装VPN"><a href="#安装VPN" class="headerlink" title="安装VPN"></a>安装VPN</h2><p>我使用的是socketpro软件: <a href="https://www.socketprohc.com/">https://www.socketprohc.com</a></p><p>按照帮助文档中的指示进行安装编译, 每次启动的时候使用nohup**&amp;代码让他后台运行.</p><blockquote><p><a href="https://www.socketprohc.com/hc/zh-cn/articles/360022001091-%E5%AE%89%E8%A3%85Linux%E5%AE%A2%E6%88%B7%E7%AB%AF">socketPro 使用手册</a></p><p><a href="https://www.cnblogs.com/kaituorensheng/p/3980334.html">开启vpn指令</a></p></blockquote><blockquote><ol><li>即使关闭终端也可以后台进行:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ss-local -c ~/socketpro/HK2.json &amp;</span><br></pre></td></tr></table></figure><p> 打开网络代理;</p><ol start="2"><li><p>显示后台进程: <code>ps -aux | grep &quot;HK2.json&quot;</code></p></li><li><p>kill pid(进程号)</p></li><li><p>关闭网络代理</p></li></ol></blockquote><h2 id="安装proxychains"><a href="#安装proxychains" class="headerlink" title="安装proxychains"></a>安装proxychains</h2><p><a href="https://blog.popkx.com/Ubuntu-install-proxychains-let-terminal-using-socks5-proxy-speed-up-downloading/">https://blog.popkx.com/Ubuntu-install-proxychains-let-terminal-using-socks5-proxy-speed-up-downloading/</a></p><p>代理网络, 加速终端下载。</p><p>用curl测试一直连不上服务器。也不知道proxychains有没有发挥作用，反正在费时慢速的命令前加上proxychains就可以使用了，心里作用感觉还行。</p><h1 id="编程环境准备"><a href="#编程环境准备" class="headerlink" title="编程环境准备"></a>编程环境准备</h1><h2 id="安装Ceres-Solver"><a href="#安装Ceres-Solver" class="headerlink" title="安装Ceres-Solver"></a>安装Ceres-Solver</h2><p><a href="https://www.jianshu.com/p/e5b03cf22c80">入门百科</a></p><p><a href="http://ceres-solver.org/features.html">官方文档</a></p><p>简单了解一下这是谷歌使用多年的用于求解非线性优化问题的库,在激光雷达SLAM算法中广泛被使用. 了解以下即可. 算法分为三步骤: </p><ol><li>最优函数 </li><li>构建待求解优化问题</li><li>配置求解器参数</li></ol><h3 id="安装依赖库"><a href="#安装依赖库" class="headerlink" title="安装依赖库"></a>安装依赖库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CMake &gt;3.5 version:</span></span><br><span class="line">sudo apt-get install cmake</span><br><span class="line"><span class="meta">#</span><span class="bash"> google-glog + gflags 用于记录有关内存分配和解决方案各个部分所消耗的时间，内部错误条件等的详细信息</span></span><br><span class="line">sudo apt-get install libgoogle-glog-dev libgflags-dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS &amp; LAPACK</span></span><br><span class="line">sudo apt-get install libatlas-base-dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> Eigen3  &gt; 3.3 version: </span></span><br><span class="line">sudo apt-get install libeigen3-dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> SuiteSparse and CXSparse (optional)</span></span><br><span class="line">sudo apt-get install libsuitesparse-dev</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tar zxf ceres-solver<span class="number">-2.0</span><span class="number">.0</span>.tar.gz</span><br><span class="line">mkdir ceres-bin</span><br><span class="line">cd ceres-bin</span><br><span class="line">cmake ../ceres-solver<span class="number">-2.0</span><span class="number">.0</span></span><br><span class="line">make -j3</span><br><span class="line">make test</span><br><span class="line"># Optionally install Ceres, it can also be exported <span class="keyword">using</span> CMake which</span><br><span class="line"><span class="meta"># allows Ceres to be used without requiring installation, see the documentation</span></span><br><span class="line"><span class="meta"># for the EXPORT_BUILD_DIR option for more information.</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="安装ntcan驱动"><a href="#安装ntcan驱动" class="headerlink" title="安装ntcan驱动"></a>安装ntcan驱动</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzU0NTY1MjMyMA==&mid=2247483734&idx=1&sn=d34b05930faad591ab406f6980ef496d&chksm=fb68ea59cc1f634f059997a5df4d72245cf12482f3630387385f27bc857d8aac4bd34d6b6eac&mpshare=1&scene=1&srcid=0802y9aLyMoG1fLqLAmFckg8&sharer_sharetime=1564725138547&sharer_shareid=217e32ecaea6b07e5e13a33b8b664e23&exportkey=AUuW4VYfF46FRgrTQd9RpDY=&pass_ticket=3eWdTXq9a/0BR3GcSkFk2tt4qKx/Rz3S6sUoOxcRmtXezeazDVg8+TmBGR12YNPo&wx_header=0#rd">公众号连接</a></p><p>下载连接: <a href="http://esdshanghai.com/esd_download.html">http://esdshanghai.com/esd_download.html</a></p><p>自己电脑上调试只需要安装ntcan的头文件和源文件库即可,即文中的567步.</p><p>或者直接在CMake中注释掉can节点</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Ubuntu-16-04&quot;&gt;&lt;a href=&quot;#Ubuntu-16-04&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 16.04&quot;&gt;&lt;/a&gt;Ubuntu 16.04&lt;/h1&gt;&lt;h2 id=&quot;移动硬盘-Ubuntu-系统安装&quot;&gt;&lt;a href=&quot;#移动硬盘-Ubuntu-系统安装&quot; class=&quot;headerlink&quot; title=&quot;移动硬盘 Ubuntu 系统安装&quot;&gt;&lt;/a&gt;移动硬盘 Ubuntu 系统安装&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.jaylee.top/2019/12/15/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%B3%A8%E6%84%8F/&quot;&gt;16.04见这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/54d9a3a695cc&quot;&gt;18.04安装参考&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;文件目录&quot;&gt;&lt;a href=&quot;#文件目录&quot; class=&quot;headerlink&quot; title=&quot;文件目录&quot;&gt;&lt;/a&gt;文件目录&lt;/h2&gt;&lt;p&gt;/ (根目录) &amp;gt;&amp;gt; / (home目录) &amp;gt;&amp;gt; ~ (当前用户目录) &amp;gt;&amp;gt; /下载 /桌面等&lt;/p&gt;
&lt;h2 id=&quot;终端命令&quot;&gt;&lt;a href=&quot;#终端命令&quot; class=&quot;headerlink&quot; title=&quot;终端命令&quot;&gt;&lt;/a&gt;终端命令&lt;/h2&gt;&lt;p&gt;命令格式:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;command  [-options]  [parameter]&lt;br&gt;sudo加在命令前面表示以管理员身份执行,如:&lt;br&gt;sudo apt install/remove/upgrade *&lt;br&gt;sudo apt-get update /upgrade&lt;br&gt;cd (change directory) 相对/绝对路径(~ /)      cd .. 返回上层目录&lt;br&gt;ls (list)/ll&lt;br&gt;rm (remove)  删除之后无法恢复&lt;br&gt;clear&lt;br&gt;mkdir&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="工具技能" scheme="https://www.jaylee.top/categories/%E5%B7%A5%E5%85%B7%E6%8A%80%E8%83%BD/"/>
    
    
    <category term="Ubuntu" scheme="https://www.jaylee.top/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://www.jaylee.top/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/%E3%80%90%E5%AE%9E%E9%AA%8C%E7%9B%B8%E5%85%B3%E3%80%91/"/>
    <id>https://www.jaylee.top/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/%E3%80%90%E5%AE%9E%E9%AA%8C%E7%9B%B8%E5%85%B3%E3%80%91/</id>
    <published>2021-07-12T14:51:13.365Z</published>
    <updated>2021-07-12T14:51:13.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kvaser"><a href="#Kvaser" class="headerlink" title="Kvaser"></a>Kvaser</h1><p><a href="https://github.com/astuff/kvaser_interface">https://github.com/astuff/kvaser_interface</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;?xml</span> <span class="string">version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="string">&lt;launch&gt;</span></span><br><span class="line">  <span class="string">&lt;arg</span> <span class="string">name=&quot;can_hardware_id&quot;</span> <span class="string">default=&quot;011683&quot;</span> <span class="string">/&gt;</span></span><br><span class="line">  <span class="string">&lt;!--</span> <span class="string">&lt;arg</span> <span class="string">name=&quot;can_circuit_id&quot;</span> <span class="string">default=&quot;2&quot;</span> <span class="string">/&gt;</span> <span class="string">--&gt;</span></span><br><span class="line">  <span class="string">&lt;arg</span> <span class="string">name=&quot;can_bit_rate&quot;</span> <span class="string">default=&quot;500000&quot;</span> <span class="string">/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">&lt;node</span> <span class="string">pkg=&quot;kvaser_interface&quot;</span> <span class="string">type=&quot;kvaser_can_bridge&quot;</span> <span class="string">ns=&quot;kvaser_channel_1&quot;</span> <span class="string">name=&quot;kvaser_can_bridge&quot;</span> <span class="string">output=&quot;screen&quot;&gt;</span></span><br><span class="line">    <span class="string">&lt;param</span> <span class="string">name=&quot;can_hardware_id&quot;</span> <span class="string">value=&quot;$(arg</span> <span class="string">can_hardware_id)&quot;</span> <span class="string">/&gt;</span></span><br><span class="line">    <span class="string">&lt;param</span> <span class="string">name=&quot;can_circuit_id&quot;</span> <span class="string">value=&quot;1&quot;</span> <span class="string">/&gt;</span></span><br><span class="line">    <span class="string">&lt;param</span> <span class="string">name=&quot;can_bit_rate&quot;</span> <span class="string">value=&quot;$(arg</span> <span class="string">can_bit_rate)&quot;</span> <span class="string">/&gt;</span></span><br><span class="line">  <span class="string">&lt;/node&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">&lt;node</span> <span class="string">pkg=&quot;kvaser_interface&quot;</span> <span class="string">type=&quot;kvaser_can_bridge&quot;</span> <span class="string">ns=&quot;kvaser_channel_2&quot;</span> <span class="string">name=&quot;kvaser_can_bridge&quot;</span> <span class="string">output=&quot;screen&quot;&gt;</span></span><br><span class="line">    <span class="string">&lt;param</span> <span class="string">name=&quot;can_hardware_id&quot;</span> <span class="string">value=&quot;$(arg</span> <span class="string">can_hardware_id)&quot;</span> <span class="string">/&gt;</span></span><br><span class="line">    <span class="string">&lt;param</span> <span class="string">name=&quot;can_circuit_id&quot;</span> <span class="string">value=&quot;2&quot;</span> <span class="string">/&gt;</span></span><br><span class="line">    <span class="string">&lt;param</span> <span class="string">name=&quot;can_bit_rate&quot;</span> <span class="string">value=&quot;$(arg</span> <span class="string">can_bit_rate)&quot;</span> <span class="string">/&gt;</span></span><br><span class="line">  <span class="string">&lt;/node&gt;</span></span><br><span class="line"><span class="string">&lt;/launch&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="采集数据"><a href="#采集数据" class="headerlink" title="采集数据"></a>采集数据</h1><ol><li>kvaser 正确链接，接口：<ul><li>CHANEL 2 接 诊断口2  RT3000数据</li><li>CHANEL 3 接 诊断口4  V3上电和VCU读码盘转向盘数据</li></ul></li><li>上电，matlab/ros驱动<ul><li><em>matlab</em>仿真时间要调成真实时间，上电的时候断开紧急开关（按下）</li><li>ros驱动指令如下</li><li><em>todo问题</em>：roskvaser_powerUp没用</li></ul></li><li>连接以太网线和路由器<ul><li>交换机供电5v，——分线器可能电压不够，利用充电宝或者工控机</li></ul></li><li>连接RT3000和千寻服务<ul><li>当精度热机到要求的时候开始记录</li></ul></li><li>启动算法</li><li>录包<ul><li>点云没有记录下来</li></ul></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">kvaser驱动</span></span><br><span class="line">roslaunch kvaser_interface kvaser_can_bridge.launch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">控制v3上电程序</span></span><br><span class="line">rosrun lidar_percetion powerUp -i -m -d -g</span><br><span class="line"></span><br><span class="line">rosrun lidar_percetion kvaser_powerUp -i -m -d -g</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">雷达驱动</span></span><br><span class="line">roslaunch rslidar_sdk start.launch/start_three.launch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 感知算法</span></span><br><span class="line">roslaunch lidar_perception SLAM_and_Detection.launch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">record</span></span><br><span class="line">rosbag record  /chasis_speed /rt3000_pose /steering_angle_deg /rslidar_points /left/rslidar_points /right/rslidar_points /wheeling_count_fl_fr_rl_rr</span><br></pre></td></tr></table></figure><p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/%E3%80%90%E5%AE%9E%E9%AA%8C%E7%9B%B8%E5%85%B3%E3%80%91/image-20210124150913640.png" alt="image-20210124150913640"></p><p>运行一会会自动关闭</p><h2 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h2><ol><li>matplotlib 画图figure空白</li></ol><p>echo 3 &gt; /proc/sys/vm/drop_caches </p><p>echo $ DISPLAY=0.0</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Kvaser&quot;&gt;&lt;a href=&quot;#Kvaser&quot; class=&quot;headerlink&quot; title=&quot;Kvaser&quot;&gt;&lt;/a&gt;Kvaser&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/astuff/kvaser_interface&quot;&gt;h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://www.jaylee.top/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>https://www.jaylee.top/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/</id>
    <published>2021-07-12T14:51:13.334Z</published>
    <updated>2021-07-12T14:51:13.334Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h1><h2 id="2021年3月1日，Mon"><a href="#2021年3月1日，Mon" class="headerlink" title="2021年3月1日，Mon."></a>2021年3月1日，Mon.</h2><ol><li>修改论文，摘要和结论，送评阅<ul><li>X方向最大误差的情况分析：主要原因+次要原因，定性定量，数据支撑</li><li>与（检测）单线和（跟踪）DR的对比</li></ul></li></ol><h2 id="2021年3月4日，Wen"><a href="#2021年3月4日，Wen" class="headerlink" title="2021年3月4日，Wen."></a>2021年3月4日，Wen.</h2><ol><li><p>梳理论文逻辑，分析清楚问题</p><ol><li><p>量化 定位的误差。</p><p>–&gt;&gt;按照相对位置关系，更换定位的基准试试</p><p>–&gt;&gt;分析最大误差量化其构成</p></li><li><p>由单线和DR引出问题分析 –&gt;&gt; 对比性能和改善的地方</p></li></ol></li><li><p>制作PPT（3月9号）</p></li></ol><h2 id="2021-03-05，Thur"><a href="#2021-03-05，Thur" class="headerlink" title="2021-03-05，Thur."></a>2021-03-05，Thur.</h2><ol><li><h3 id="分析jiaoyun-ver2，修改算法"><a href="#分析jiaoyun-ver2，修改算法" class="headerlink" title="分析jiaoyun-ver2，修改算法"></a>分析jiaoyun-ver2，修改算法</h3><ol><li>最大误差情形1，残缺+噪点？</li></ol><p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305103614587.png" alt="image-20210305103614587" style="zoom:40%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305104721877.png" alt="image-20210305104721877" style="zoom:50%;"></p><ul><li><p>加入统计滤波看看噪声点效果如何，</p><p>== 滤波参数25\1.0，过滤太多了，调小一点. 较远的地方B车点云已经被删除了大部分。</p><p>==25\3.0,要好一些了，当噪点还是很抖动</p><p>==25\2.0, 点云太小，偏向1.0</p><p>==35/2.0，还是很小</p><p>== 40/2.5，<strong>OK</strong></p></li><li><p>长宽的拓展方向总是有错会一直抖动，会不会带来的误差比不拓展还大？</p><p>== 为啥拓展长？为了解决库位的四个点找不准？——但是拓展不准，反向之后更会造成4个点排序混乱，是否有必要？</p><p>==为啥拓展宽？为了弥补看不到圆角。感觉没啥必要，更换定位路标更重要。</p><p>== 尝试取消拓展，效果如何？</p><ul><li>无拓展</li></ul><p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305155221774.png" alt="image-20210305155221774" style="zoom:%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305155744775.png" alt="image-20210305155744775"></p><ul><li>拓展</li></ul></li></ul></li></ol><pre><code> ![image-20210305160010148](202103备忘录/image-20210305160010148.png)![image-20210305155837176](202103备忘录/image-20210305155837176.png) == 从观测值来看，*不拓展好那么一丢丢*；倒车大转角处拓展就会很差，直接失效启动行位推算了。最后位置y方向拓展会好一些 ![image-20210305175412358](202103备忘录/image-20210305175412358.png) &lt;img src=&quot;202103备忘录/image-20210305182129241.png&quot; alt=&quot;image-20210305182129241&quot; style=&quot;zoom:;&quot; /&gt;![image-20210305182202941](202103备忘录/image-20210305182202941.png) ​                                                           </code></pre><ul><li><p>按照相对位置关系判断以哪一个做为基准点？</p><p>== 对比下有switch算法和没有的差别</p></li></ul><ol start="2"><li><p>标的真值也发生了偏差，坐标转换过程中有偏差？</p><p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305103614587.png" alt="image-20210305103614587" style="zoom: 50%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305180903787.png" alt="image-20210305180903787" style="zoom:50%;"></p><p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305181419945.png" alt="image-20210305181419945" style="zoom:33%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305180903787.png" alt="image-20210305180903787" style="zoom:50%;"></p><p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305181419945.png" alt="image-20210305181419945" style="zoom:30%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305181545324.png" alt="image-20210305181545324" style="zoom: 33%;"></p><p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305181419945.png" alt="image-20210305181419945" style="zoom: 33%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305181545324.png" alt="image-20210305181545324" style="zoom:50%;"></p></li></ol>   <img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210305182025204.png" alt="image-20210305182025204" style="zoom:50%;"><h2 id="2021-03-07，Sunday"><a href="#2021-03-07，Sunday" class="headerlink" title="2021-03-07，Sunday"></a>2021-03-07，Sunday</h2><h3 id="jiaoyun-ver2分析"><a href="#jiaoyun-ver2分析" class="headerlink" title="jiaoyun-ver2分析"></a>jiaoyun-ver2分析</h3><p>最大误差，情形一，远离库位。</p><p><strong>主要原因</strong>：点云残缺，</p><p><strong>次要原因</strong>：噪点，拓展框抖动</p><ol><li><p>次要原因：噪点</p><ul><li>k/std = 70/1.0;  leafsize0.05/0.05/1.0</li></ul><p>== 噪点过滤得太猛了</p><ul><li><p>k/std = 50/1.5; </p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210307112350352.png" alt="image-20210307112350352" style="zoom:33%;"></li><li><p>voxelGrid Z-leafsize增大 </p><p>==效果聊胜于无</p></li><li><p>minimunPointsNumber（2）leafsize=0.05/0.05/2</p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210307140809379.png" alt="image-20210307140809379" style="zoom:50%;"><p>==minNumber(1) leafsize=0.04/0.04/5,很难调好，k,sd=50,2.0</p><p>==<em>放弃噪音点优化这个吧。</em></p></li></ul></li><li><p>主要原因，残缺</p><p>失效时刻1，离B车太远了残缺——<strong>ICP补全</strong>，A车库位角又残缺了——<strong>拓展宽度</strong> &amp; <strong>更换定位基准</strong></p><p>按照相对位置关系判断以哪一个做为基准点？对比下有switch算法和没有的差别？</p><ul><li><p>按照库位坐标系下自车位置，切换使用B点定位</p><p>== try1好像没起作用</p><p>== try2 滤波后，点残缺但是效果变好了,残缺厉害后，拓展也容易失效了。</p><p>==3 好像误差是小了一点点，&gt;1.5m</p></li><li><p>拓展长度容易翻转，失效</p><p>== 都拓展，然后使用B车定位，噪音稍微消除k,sd=50,1.5</p></li></ul></li></ol><ul><li><p>== 对比下有switch算法和没有的差别</p><p>==有switch &amp; 强制B车定位 无tuozhan</p><p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210307204559391.png" alt="image-20210307204559391"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210307205531194.png" alt="image-20210307205531194" style="zoom:80%;"></p><p>==无switch和强制B，有拓展</p><p>== <img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210307204851097.png" alt="image-20210307204851097" style="zoom:80%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210307205431178.png" alt="image-20210307205431178"></p><p>=有switch无强制B，有拓展</p><p><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/x.svg" alt="x" style="zoom:80%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/position.svg" alt="position" style="zoom:80%;"></p></li></ul><p>   <img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/y.svg" alt="y" style="zoom:80%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/angle.svg" alt="angle" style="zoom:80%;"></p><p>   <img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/x_err.svg" alt="x_err" style="zoom:80%;"><img src="/2021/07/12/%E7%A0%94%E7%A9%B6%E7%94%9F/%E6%AF%95%E8%AE%BE%E7%9B%B8%E5%85%B3(%E4%B8%8D%E8%A6%81%E6%8E%A8%E9%80%81%EF%BC%89/202103%E5%A4%87%E5%BF%98%E5%BD%95/image-20210307211624706.png" alt="image-20210307211624706" style="zoom:80%;"></p><p>   ==可以看出在大误差情形1的时候，依靠残缺的B定位还没有拓展可靠；而在内部的时候有switch明显改善很多。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一周&quot;&gt;&lt;a href=&quot;#第一周&quot; class=&quot;headerlink&quot; title=&quot;第一周&quot;&gt;&lt;/a&gt;第一周&lt;/h1&gt;&lt;h2 id=&quot;2021年3月1日，Mon&quot;&gt;&lt;a href=&quot;#2021年3月1日，Mon&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://www.jaylee.top/2021/07/12/TODO/%E3%80%90TODO%E3%80%91%E5%BE%85%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/"/>
    <id>https://www.jaylee.top/2021/07/12/TODO/%E3%80%90TODO%E3%80%91%E5%BE%85%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/</id>
    <published>2021-07-12T14:51:13.178Z</published>
    <updated>2021-07-12T14:51:13.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【ROS】多线程"><a href="#【ROS】多线程" class="headerlink" title="【ROS】多线程"></a>【ROS】多线程</h1><p>ROS:: spin()</p><p>ROS::spinOnce()</p><p>ROS::MultiThreadedSpinner</p><p>ROS::AsyncSpinner</p><p>ros::CallbackQueue::callAvailable() / ::callOne()</p><p>std::thread process{func, argument}</p><p>std::queue&lt; &gt; x</p><p>std::mutex </p><h1 id="【ROS】收取多个topic"><a href="#【ROS】收取多个topic" class="headerlink" title="【ROS】收取多个topic"></a>【ROS】收取多个topic</h1><p>ros官方链接：<a href="http://wiki.ros.org/message_filters">http://wiki.ros.org/message_filters</a></p><p>参考链接：<a href="https://www.cnblogs.com/gdut-gordon/p/10293446.html">https://www.cnblogs.com/gdut-gordon/p/10293446.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【ROS】多线程&quot;&gt;&lt;a href=&quot;#【ROS】多线程&quot; class=&quot;headerlink&quot; title=&quot;【ROS】多线程&quot;&gt;&lt;/a&gt;【ROS】多线程&lt;/h1&gt;&lt;p&gt;ROS:: spin()&lt;/p&gt;
&lt;p&gt;ROS::spinOnce()&lt;/p&gt;
&lt;p&gt;ROS</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>PPT制作方法</title>
    <link href="https://www.jaylee.top/2021/07/08/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/PPT%E5%88%B6%E4%BD%9C/"/>
    <id>https://www.jaylee.top/2021/07/08/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/PPT%E5%88%B6%E4%BD%9C/</id>
    <published>2021-07-08T09:44:00.000Z</published>
    <updated>2021-07-12T14:51:13.178Z</updated>
    
    <content type="html"><![CDATA[<p>合抱之木，生于毫末；九层之台，起于累土。</p><p>三部分：策划难忘、视觉设计、演讲仪式</p><h2 id="演讲"><a href="#演讲" class="headerlink" title="演讲"></a>演讲</h2><p>以观众的思维演讲，文字数据可视化，避免单向交流。整体的逻辑。</p><h2 id="PPT-演讲自检清单"><a href="#PPT-演讲自检清单" class="headerlink" title="PPT 演讲自检清单"></a>PPT 演讲自检清单</h2><table><thead><tr><th>演讲的主题：</th><th align="left"></th></tr></thead><tbody><tr><td>观众情况</td><td align="left"></td></tr><tr><td>观众最想听的三点</td><td align="left"></td></tr><tr><td>观众最不能接受的</td><td align="left"></td></tr><tr><td>提前试听并确认过这些吗？</td><td align="left">动画、时间、衔接、PPT页面完整、顺利打开播放、字体展示</td></tr><tr><td>开场方式</td><td align="left">普通、互动、多媒体、自我介绍</td></tr><tr><td>如何打造个人特色</td><td align="left">表演、服装、号召</td></tr><tr><td>演讲是否有令人难忘的举动句子？</td><td align="left">什么形式？多少？</td></tr><tr><td>收尾的方式？</td><td align="left">祝福？首尾呼应？</td></tr><tr><td>我觉得观众会记住哪3点？</td><td align="left"></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;合抱之木，生于毫末；九层之台，起于累土。&lt;/p&gt;
&lt;p&gt;三部分：策划难忘、视觉设计、演讲仪式&lt;/p&gt;
&lt;h2 id=&quot;演讲&quot;&gt;&lt;a href=&quot;#演讲&quot; class=&quot;headerlink&quot; title=&quot;演讲&quot;&gt;&lt;/a&gt;演讲&lt;/h2&gt;&lt;p&gt;以观众的思维演讲，文字数据可视化</summary>
      
    
    
    
    <category term="live a lovely life" scheme="https://www.jaylee.top/categories/live-a-lovely-life/"/>
    
    
    <category term="PPT" scheme="https://www.jaylee.top/tags/PPT/"/>
    
  </entry>
  
  <entry>
    <title>旋转</title>
    <link href="https://www.jaylee.top/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/"/>
    <id>https://www.jaylee.top/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/</id>
    <published>2021-02-23T07:05:47.000Z</published>
    <updated>2021-07-12T14:51:13.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="旋转基础"><a href="#旋转基础" class="headerlink" title="旋转基础"></a>旋转基础</h1><p>转载链接：<a href="https://www.cnblogs.com/21207-iHome/p/6894128.html">https://www.cnblogs.com/21207-iHome/p/6894128.html</a></p><h2 id="RPY角与Z-Y-X欧拉角"><a href="#RPY角与Z-Y-X欧拉角" class="headerlink" title="RPY角与Z-Y-X欧拉角"></a><strong>RPY角与Z-Y-X欧拉角</strong></h2><p>　　描述坐标系{B}相对于参考坐标系{A}的姿态有两种方式。第一种是<strong>绕固定（参考）坐标轴旋转</strong>：假设开始两个坐标系重合，先将{B}绕{A}的X轴旋转$\lambda$，然后绕{A}的Y轴旋转 $\beta$ ，最后绕{A}的Z轴旋转$\alpha$，就能旋转到当前姿态。可以称其为X-Y-Z fixed angles或RPY角(Roll, Pitch, Yaw)。</p><a id="more"></a><p>Roll:横滚</p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/890966-20170525140304841-1105765244.gif" alt="img" style="zoom:50%;"><p>　　Pitch: 俯仰</p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/890966-20170525140116919-1889606213.gif" alt="img" style="zoom:50%;"><p>Yaw: 偏航（航向）</p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/890966-20170525140337654-1615043244.gif" alt="img" style="zoom:50%;"><p>由于是绕固定坐标系旋转，则旋转矩阵为（$c\alpha$ is shorthand for $\cos\alpha$, $s\alpha$ is shorthand for $\sin\alpha$,and so on.）<br>$$<br>R_{XYZ}(\gamma,\beta,\alpha)=R_Z(\alpha)R_Y(\beta)R_X(\gamma)=\begin{bmatrix}<br>c\alpha c\beta &amp; c\alpha s\beta s\gamma-s\alpha c\gamma &amp; c\alpha s\beta c\gamma+s\alpha s\gamma\<br>s\alpha c\beta &amp; s\alpha s\beta s\gamma+c\alpha c\gamma &amp; s\alpha s\beta c\gamma-c\alpha s\gamma\<br>-s\beta&amp; c\beta s\gamma &amp; c\beta c\gamma<br>\end{bmatrix}<br>$$<br>　　另一种姿态描述方式是<strong>绕自身坐标轴旋转</strong>：假设开始两个坐标系重合，先将{B}绕自身的Z轴旋转$\alpha$，然后绕Y轴旋转$\beta$，最后绕X轴旋转$\gamma$，就能旋转到当前姿态。称其为Z-Y-X欧拉角，由于是绕自身坐标轴进行旋转，则旋转矩阵为：<br>$$<br>R_{Z’Y’X’}(\alpha,\beta,\gamma)=R_Z(\alpha)R_Y(\beta)R_X(\gamma)=\begin{bmatrix}<br>c\alpha c\beta &amp; c\alpha s\beta s\gamma-s\alpha c\gamma &amp; c\alpha s\beta c\gamma+s\alpha s\gamma\<br>s\alpha c\beta &amp; s\alpha s\beta s\gamma+c\alpha c\gamma &amp; s\alpha s\beta c\gamma-c\alpha s\gamma\<br>-s\beta&amp; c\beta s\gamma &amp; c\beta c\gamma<br>\end{bmatrix}<br>$$<br>　　可以发现这两种描述方式得到的旋转矩阵是一样的，即绕固定坐标轴X-Y-Z旋转$(\gamma,\beta,\alpha)$和绕自身坐标轴Z-Y-X旋转$(\alpha,\beta,\gamma)$的最终结果一样，只是描述的方法有差别而已。In gerenal: three rotations taken about fixed axes yield the same final orientation as the same three rotations taken in opposite order about the axes of the moving frame.</p><h2 id="Axis-Angle与四元数"><a href="#Axis-Angle与四元数" class="headerlink" title="Axis-Angle与四元数"></a><strong>Axis-Angle与四元数</strong></h2><p>　　绕坐标轴的多次旋转可以等效为绕某一转轴旋转一定的角度。假设等效旋转轴方向向量为$\vec{K}=[k_x,k_y,k_z]^T$，等效旋转角为$\theta$，则四元数$q=(x,y,z,w)$，其中：</p><p>$$\begin{align*}<br>x &amp;= k_x \cdot sin \frac{\theta}{2}\<br>y &amp;= k_y \cdot sin \frac{\theta}{2}\<br>z &amp;= k_z \cdot sin \frac{\theta}{2}\<br>w &amp;= cos \frac{\theta}{2}<br>\end{align*}$$</p><p>　　且有$x^2+y^2+z^2+w^2=1$</p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/quaternion.png" alt="img"></p><p>　　即四元数存储了旋转轴和旋转角的信息，它能方便的描述刚体绕任意轴的旋转。</p><p>　　四元数转换为旋转矩阵：</p><p>$$R=\begin{bmatrix}<br>1-2y^2-2z^2 &amp; 2(xy-zw) &amp; 2(xz+yw)\<br>2(xy+zw) &amp; 1-2x^2-2z^2 &amp; 2(yz-xw)\<br>2(xz-yw)&amp; 2(yz+xw) &amp; 1-2x^2-2y^2<br>\end{bmatrix}$$</p><p> 　已知旋转矩阵为：</p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/890966-20170525130817779-2094968004.png" alt="img"></p><p>　　则对应的四元数为：</p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/890966-20170525130848716-419557543.png" alt="img"></p><hr><h2 id="四元数与欧拉角的相互转换"><a href="#四元数与欧拉角的相互转换" class="headerlink" title="四元数与欧拉角的相互转换"></a><strong>四元数与欧拉角的相互转换</strong></h2><p>　　定义两个四元数：</p><p>　　<img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/14ce36d3d539b60003b31a9feb50352ac65cb79c.jpg" alt="img"></p><p>　　<img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/8cb1cb1349540923a2da76569058d109b3de4962.jpg" alt="img"></p><p>　　其中<img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/7dd98d1001e939017bae981679ec54e736d1966d.jpg" alt="img"> 表示矢量 </p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/63d0f703918fa0ec052e7125249759ee3d6ddb28.jpg" alt="img"> </p><p> ；而 </p><p> <img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/a8014c086e061d95f4ec221079f40ad162d9ca74.jpg" alt="img"></p><p> 表示矢量 </p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/9c16fdfaaf51f3dedb19ac4c96eef01f3a29796a.jpg" alt="img"> </p><p><strong>四元数加法：</strong></p><p>　　跟复数、向量和矩阵一样，两个四元数之和需要将不同的元素加起来。</p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/d01373f082025aaf6ace6be3f9edab64034f1a1d.jpg" alt="img"></p><p>　　加法遵循实数和复数的所有交换律和结合律。</p><p><strong>四元数乘法：</strong></p><p>　　四元数的乘法的意义类似于矩阵的乘法，可以表示旋转的合成。当有多次旋转操作时，使用四元数可以获得更高的计算效率。</p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/7e3e6709c93d70cf36be3013fbdcd100baa12b63.jpg" alt="img"></p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/54fbb2fb43166d2233909989452309f79152d2cc.jpg" alt="img"></p><p>　　由于四元数乘法的非可换性，pq并不等于qp，qp乘积的向量部分是：</p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/72f082025aafa40f75cb4bc3a864034f78f0199a.jpg" alt="img"></p><p>　　</p><p>　　Mathematica中有四元数相关的程序包<a href="https://reference.wolfram.com/language/Quaternions/tutorial/Quaternions.html"><strong>Quaternions Package</strong></a>，需要先导入才能使用。下面计算了三个四元数的乘积：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;Quaternions&#96;     （* This loads the package *）</span><br><span class="line">Quaternion[2, 1, 1, 3] ** Quaternion[2, 1, 1, 0] ** Quaternion[1, 1, 1, 1]    (* Be sure to use ** rather than * when multiplying quaternions *)</span><br></pre></td></tr></table></figure><p>　　计算结果为：Quaternion[-12, 4, 14, 2]</p><p>　　那么将Z-Y-X欧拉角（或RPY角：绕固定坐标系的X-Y-Z依次旋转$\alpha$,$\beta$,$\gamma$角）转换为四元数：</p><p>$$q=\begin{bmatrix}\cos\frac{\gamma}{2}\ 0\ 0\ \sin\frac{\gamma}{2}\end{bmatrix} \begin{bmatrix}\cos\frac{\beta}{2}\ 0\ \sin\frac{\beta}{2}\ 0\end{bmatrix} \begin{bmatrix}\cos\frac{\alpha}{2}\ \sin \frac{\alpha}{2}\ 0\ 0\end{bmatrix}=\begin{bmatrix}<br>\cos\frac{\alpha}{2}\cos\frac{\beta}{2}\cos\frac{\gamma}{2}+\sin\frac{\alpha}{2}\sin\frac{\beta}{2}\sin\frac{\gamma}{2}\<br>\sin\frac{\alpha}{2}\cos\frac{\beta}{2}\cos\frac{\gamma}{2}-\cos\frac{\alpha}{2}\sin\frac{\beta}{2}\sin\frac{\gamma}{2}\ \cos\frac{\alpha}{2}\sin\frac{\beta}{2}\cos\frac{\gamma}{2}+\sin\frac{\alpha}{2}\cos\frac{\beta}{2}\sin\frac{\gamma}{2}<br>\ \cos\frac{\alpha}{2}\cos\frac{\beta}{2}\sin\frac{\gamma}{2}-\sin\frac{\alpha}{2}\sin\frac{\beta}{2}\cos\frac{\gamma}{2}<br>\end{bmatrix}$$</p><p> 　根据上面的公式可以求出逆解，即由四元数$q=(q_0,q_1,q_2,q_3)$或$q=(w,x,y,z)$到欧拉角的转换为：</p><p>$$\begin{bmatrix}\alpha\ \beta\ \gamma\end{bmatrix} = \begin{bmatrix}<br>\arctan\frac{2(q_0q_1+q_2q_3)}{1-2(q_1^2+q_2^2)}\<br>\arcsin(2(q_0q_2-q_1q_3))\<br>\arctan\frac{2(q_0q_3+q_1q_2)}{1-2(q_2^2+q_3^2)}<br>\end{bmatrix}$$</p><p>　　由于arctan和arcsin的取值范围在$\frac{-\pi}{2}$和$\frac{\pi}{2}$之间，只有180°，而绕某个轴旋转时范围是360°，因此要使用**<a href="http://baike.baidu.com/link?url=-tnNm1Iop3YKgo3EKf4OpaAPSC6KsyMS3trChz3oL3fsTTqFsXt8Y6oX_anPYoMa8EO9tJ7eSRnK1LiuFF4Jma">atan2</a>**函数代替arctan函数：</p><p>$$\begin{bmatrix}\alpha\ \beta\ \gamma\end{bmatrix} = \begin{bmatrix}<br>atan2(2(q_0q_1+q_2q_3),1-2(q_1^2+q_2^2))\<br>\arcsin(2(q_0q_2-q_1q_3))\<br>atan2(2(q_0 q_3+q_1 q_2),1-2(q_2^2+q_3^2))<br>\end{bmatrix}$$</p><p>对于tan(θ) = y / x ：</p><p>　　θ = ATan(y / x)求出的θ取值范围是[-PI/2, PI/2]；</p><p>　　θ = ATan2(y, x)求出的θ取值范围是[-PI,  PI]。</p><ul><li><p>当 (x, y) 在第一象限, 0 &lt; θ &lt; PI/2</p></li><li><p>当 (x, y) 在第二象限 PI/2 &lt; θ≤PI</p></li><li><p>当 (x, y) 在第三象限, -PI &lt; θ &lt; -PI/2</p></li><li><p>当 (x, y) 在第四象限, -PI/2 &lt; θ &lt; 0</p><p>　将<a href="http://bediyap.com/programming/convert-quaternion-to-euler-rotations/">四元数转换为欧拉角</a>可以参考下面的代码。需要注意<strong>欧拉角有12种旋转次序</strong>，而上面推导的公式是按照Z-Y-X顺序进行的，所以有时会在网上看到不同的转换公式（因为对应着不同的旋转次序），在使用时一定要注意旋转次序是什么。比如ADAMS软件里就默认Body 3-1-3次序，即Z-X-Z欧拉角，而VREP中则按照X-Y-Z欧拉角旋转。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum RotSeq&#123;zyx, zyz, zxy, zxz, yxz, yxy, yzx, yzy, xyz, xyx, xzy,xzx&#125;;</span><br></pre></td></tr></table></figure><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/ContractedBlock.gif" alt="img"> View Code</p><p>　　 上面的代码存在一个问题，即奇异性没有考虑。下面看一种特殊的情况（参考<a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/index.htm">Maths - Conversion Quaternion to Euler</a>）：假设一架飞机绕Y轴旋转了90°（俯仰角pitch=90），机头垂直向上，此时如何计算航向角和横滚角？</p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/890966-20170526171944435-256526740.png" alt="img" style="zoom:50%;"><p>　　这时会发生自由度丢失的情况，即Yaw和Roll会变为一个自由度。此时再使用上面的公式根据四元数计算欧拉角会出现问题：</p><p>　　$\arcsin(2(q_0q_2-q_1q_3))$的定义域为$[-1,1]$，因此$(q_0q_2-q_1q_3)\in[-0.5, 0.5]$，当$q_0q_2-q_1q_3=0.5$时（在程序中浮点数不能直接进行等于判断，要使用合理的阈值），俯仰角$\beta$为90°，将其带入正向公式计算出四元数$(q_0,q_1,q_2,q_3)$，然后可以发现逆向公式中atan2函数中的参数全部为0，即出现了$\frac{0}{0}$的情况！无法计算。</p><p>　　$\beta=\pi/2$时，$\sin\frac{\beta}{2}=\cos\frac{\beta}{2}=0.707$，将其带入公式中有</p><p>$$q=\begin{bmatrix}w\ x\ y\ z\end{bmatrix}<br>\begin{bmatrix}<br>0.707(\cos\frac{\alpha}{2}\cos\frac{\gamma}{2}+\sin\frac{\alpha}{2}\sin\frac{\gamma}{2})\<br>0.707(\sin\frac{\alpha}{2}\cos\frac{\gamma}{2}-\cos\frac{\alpha}{2}\sin\frac{\gamma}{2})\<br>0.707(\cos\frac{\alpha}{2}\cos\frac{\gamma}{2}+\sin\frac{\alpha}{2}\sin\frac{\gamma}{2})\<br>0.707(\cos\frac{\alpha}{2}\sin\frac{\gamma}{2}-\sin\frac{\alpha}{2}\cos\frac{\gamma}{2})<br>\end{bmatrix}=<br>\begin{bmatrix}<br>0.707\cos\frac{\alpha-\gamma}{2}\<br>0.707\sin\frac{\alpha-\gamma}{2}\<br>0.707\cos\frac{\alpha-\gamma}{2}\<br>0.707\sin\frac{\alpha-\gamma}{2}<br>\end{bmatrix}$$</p><p>　　则$\frac{x}{w}=\frac{z}{y}=\tan\frac{\alpha-\gamma}{2}$，于是有</p><p>$$\alpha-\gamma = 2\cdot atan2(x,w)$$</p><p> 　通常令$\alpha=0$，这时$\gamma = -2\cdot atan2(x,w)$。可以进行验证：当四元数为(w,x,y,z)=(0.653,-0.271,0.653,0.271)时，根据这些规则计算出来的ZYX欧拉角为α=0°，β=90°，γ=45°</p><p><a href="http://quaternions.online/"><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/890966-20170526175726669-1601154856.png" alt="img"></a></p><p>　　当俯仰角为-90°，即机头竖直向下时的情况也与之类似，可以推导出奇异姿态时的计算公式。比较完整的四元数转欧拉角（Z-Y-X order）的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">CameraSpacePoint QuaternionToEuler(Vector4 q) &#x2F;&#x2F; Z-Y-X Euler angles</span><br><span class="line">&#123;</span><br><span class="line">    CameraSpacePoint euler &#x3D; &#123; 0 &#125;;</span><br><span class="line">    const double Epsilon &#x3D; 0.0009765625f;</span><br><span class="line">    const double Threshold &#x3D; 0.5f - Epsilon;</span><br><span class="line"></span><br><span class="line">    double TEST &#x3D; q.w*q.y - q.x*q.z;</span><br><span class="line"></span><br><span class="line">    if (TEST &lt; -Threshold || TEST &gt; Threshold) &#x2F;&#x2F; 奇异姿态,俯仰角为±90°</span><br><span class="line">    &#123;</span><br><span class="line">        int sign &#x3D; Sign(TEST);</span><br><span class="line"></span><br><span class="line">        euler.Z &#x3D; -2 * sign * (double)atan2(q.x, q.w); &#x2F;&#x2F; yaw</span><br><span class="line"></span><br><span class="line">        euler.Y &#x3D; sign * (PI &#x2F; 2.0); &#x2F;&#x2F; pitch</span><br><span class="line"></span><br><span class="line">        euler.X &#x3D; 0; &#x2F;&#x2F; roll</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        euler.X &#x3D; atan2(2 * (q.y*q.z + q.w*q.x), q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z);</span><br><span class="line">        euler.Y &#x3D; asin(-2 * (q.x*q.z - q.w*q.y));</span><br><span class="line">        euler.Z &#x3D; atan2(2 * (q.x*q.y + q.w*q.z), q.w*q.w + q.x*q.x - q.y*q.y - q.z*q.z);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    return euler;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>　　在DirectXMath Library中有许多与刚体姿态变换相关的函数可以直接调用：</p><ul><li><p>四元数乘法：<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.quaternion.xmquaternionmultiply(v=vs.85).aspx">XMQuaternionMultiply</a> method –Computes the product of two quaternions.</p></li><li><p>旋转矩阵转四元数：<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.quaternion.xmquaternionrotationmatrix(v=vs.85).aspx">XMQuaternionRotationMatrix</a> method –Computes a rotation quaternion from a rotation matrix.</p></li><li><p>四元数转旋转矩阵：<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.matrix.xmmatrixrotationquaternion(v=vs.85).aspx">XMMatrixRotationQuaternion</a> method – Builds a rotation matrix from a quaternion.</p></li><li><p>欧拉角转四元数：<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.quaternion.xmquaternionrotationrollpitchyaw(v=vs.85).aspx">XMQuaternionRotationRollPitchYaw</a> method –Computes a rotation quaternion based on the pitch, yaw, and roll (Euler angles).</p></li><li><p>四元数转Axis-Angle：<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.quaternion.xmquaterniontoaxisangle(v=vs.85).aspx">XMQuaternionToAxisAngle</a> method –Computes an axis and angle of rotation about that axis for a given quaternion.</p></li><li><p>欧拉角转旋转矩阵：<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.matrix.xmmatrixrotationrollpitchyaw(v=vs.85).aspx">XMMatrixRotationRollPitchYaw method</a> –Builds a rotation matrix based on a given pitch, yaw, and roll (Euler angles).</p></li><li><p>Axis-Angle转旋转矩阵：<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.matrix.xmmatrixrotationaxis(v=vs.85).aspx">XMMatrixRotationAxis</a> method –Builds a matrix that rotates around an arbitrary axis.</p></li><li><p>构造绕X/Y/Z轴的旋转矩阵：<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.matrix.xmmatrixrotationx(v=vs.85).aspx?f=255&MSPPError=-2147217396">XMMatrixRotationX</a> method –Builds a matrix that rotates around the x-axis.(Angles are measured clockwise when looking along the rotation axis toward the origin)</p><p>　下面的代码中坐标系绕X轴旋转90°（注意这里不是按照右手定则的方向，而是沿着坐标轴向原点看过去以顺时针方式旋转，因此与传统的右手定则刚好方向相反），来进行变换：</p></li></ul><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/ContractedBlock.gif" alt="img"> View Code</p><p>　　结果如下图所示:</p><p><img src="/2021/02/23/TODO/%E3%80%90TODO%E3%80%91%E6%97%8B%E8%BD%AC/890966-20170526093436138-366855659.png" alt="img"></p><p>参考：</p><p><a href="http://quaternions.online/">quaternions.online</a></p><p><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ee415597(v=vs.85).aspx">DirectXMath Library Quaternion Functions</a></p><p><a href="http://bediyap.com/programming/convert-quaternion-to-euler-rotations/">Convert quaternion to euler rotations</a></p><p><a href="https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles">Conversion between quaternions and Euler angles</a></p><p><a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/index.htm">Maths - Conversion Quaternion to Euler</a></p><p><strong><a href="http://cn.mathworks.com/help/robotics/gs/coordinate-systems-in-robotics.html">Coordinate Transformations in Robotics—MATLAB</a></strong></p><p><strong><em>Introduction to Robotics - Mechanics and Control.</em></strong> Chapter 2 Spatial descriptions and transformations</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;旋转基础&quot;&gt;&lt;a href=&quot;#旋转基础&quot; class=&quot;headerlink&quot; title=&quot;旋转基础&quot;&gt;&lt;/a&gt;旋转基础&lt;/h1&gt;&lt;p&gt;转载链接：&lt;a href=&quot;https://www.cnblogs.com/21207-iHome/p/6894128.html&quot;&gt;https://www.cnblogs.com/21207-iHome/p/6894128.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;RPY角与Z-Y-X欧拉角&quot;&gt;&lt;a href=&quot;#RPY角与Z-Y-X欧拉角&quot; class=&quot;headerlink&quot; title=&quot;RPY角与Z-Y-X欧拉角&quot;&gt;&lt;/a&gt;&lt;strong&gt;RPY角与Z-Y-X欧拉角&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;　　描述坐标系{B}相对于参考坐标系{A}的姿态有两种方式。第一种是&lt;strong&gt;绕固定（参考）坐标轴旋转&lt;/strong&gt;：假设开始两个坐标系重合，先将{B}绕{A}的X轴旋转$\lambda$，然后绕{A}的Y轴旋转 $\beta$ ，最后绕{A}的Z轴旋转$\alpha$，就能旋转到当前姿态。可以称其为X-Y-Z fixed angles或RPY角(Roll, Pitch, Yaw)。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【ubuntu18.04】扩大交换空间</title>
    <link href="https://www.jaylee.top/2021/01/09/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Linux%E6%89%A9%E5%A4%A7%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4/"/>
    <id>https://www.jaylee.top/2021/01/09/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Linux%E6%89%A9%E5%A4%A7%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4/</id>
    <published>2021-01-09T04:35:01.000Z</published>
    <updated>2021-07-12T14:51:13.428Z</updated>
    
    <content type="html"><![CDATA[<p>当时建系统的时候交换空间给了1G，太小了，导致编译程序的时候一旦RAM满了就会卡死，我不得不用-j1命令限制编译的线程数，这样很慢。</p><p>因而我们可以扩大交换空间，这样，内存满的时候他可以自动把一些静态的缓存放到这里面避免卡死。</p><p>我也是小白，试了很多教程，就这一篇是最好的，能够成功。</p><p><a href="https://www.howtoing.com/how-to-add-swap-space-on-ubuntu-18-04%EF%BC%8C%E8%BD%AC%E8%BD%BD%E4%BF%9D%E5%AD%98%E5%A6%82%E4%B8%8B%EF%BC%9A">https://www.howtoing.com/how-to-add-swap-space-on-ubuntu-18-04，转载保存如下：</a></p><p>《如何在Ubuntu 18.04上添加交换空间》</p><p>防范应用程序内存不足错误的最简单方法之一是为服务器添加一些交换空间。在本指南中，我们将介绍如何将交换文件添加到Ubuntu 18.04服务器。</p><p>分类:<a href="https://www.howtoing.com/category/ubuntu">Ubuntu</a><a href="https://www.howtoing.com/category/linux-basics">Linux基础</a><a href="https://www.howtoing.com/category/operating-system">操作系统</a><a href="https://www.howtoing.com/category/ubuntu-18-04">Ubuntu 18.04</a></p><p> <em>2018-07-05 15:24:21</em></p><p><em>本教程的先前版本由<a href="https://www.digitalocean.com/community/users/jellingwood">Justin Ellingwood</a>编写</em></p><p>防范应用程序内存不足错误的最简单方法之一是为服务器添加一些交换空间。 在本指南中，我们将介绍如何将交换文件添加到Ubuntu 18.04服务器。</p><p><strong>警告：</strong>虽然通常建议对使用传统旋转硬盘驱动器的系统进行交换，但使用SSD交换可能会导致硬件随着时间的推移而出现问题。 出于这种考虑，我们不建议在DigitalOcean或任何其他使用SSD存储的提供商上启用交换。 这样做会影响您和您的邻居的底层硬件的可靠性。 本指南是为可能在其他地方使用旋转磁盘系统的用户提供的参考。</p><p>如果您需要在DigitalOcean上提高服务器的性能，我们建议您升级Droplet。 这将导致更好的结果，并将降低导致可能影响您的服务的硬件问题的可能性。</p><h2 id="什么是交换？"><a href="#什么是交换？" class="headerlink" title="什么是交换？"></a>什么是交换？</h2><p><em>交换</em>是硬盘驱动器上的一个区域，它被指定为操作系统可以临时存储无法再保存在RAM中的数据的位置。 基本上，这使您能够增加服务器在其工作“内存”中可以保留的信息量，但有一些注意事项。 硬盘驱动器上的交换空间将主要用于RAM中不再有足够空间来保存正在使用的应用程序数据。</p><p>写入磁盘的信息将比保存在RAM中的信息慢得多，但操作系统更愿意在内存中运行应用程序数据并使用交换旧数据。 总的来说，将交换空间作为系统RAM耗尽时的后备空间，可以很好地防范具有非SSD存储的系统上的内存不足异常。</p><h2 id="第1步-检查系统的交换信息"><a href="#第1步-检查系统的交换信息" class="headerlink" title="第1步 - 检查系统的交换信息"></a>第1步 - 检查系统的交换信息</h2><p>在开始之前，我们可以检查系统是否已经有一些可用的交换空间。 可以有多个交换文件或交换分区，但通常一个就足够了。</p><p>我们可以通过键入以下内容来查看系统是否已配置任</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapon --show</span><br></pre></td></tr></table></figure><p>如果您没有收到任何输出，这意味着您的系统当前没有可用的交换空间。</p><p>您可以使用<code>free</code>实用程序验证没有活动交换：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">free -h</span><br><span class="line">Output              total        used        free      shared  buff&#x2F;cache   available</span><br><span class="line">Mem:           985M         84M        222M        680K        678M        721M</span><br><span class="line">Swap:            0B          0B          0B</span><br></pre></td></tr></table></figure><p>正如您在输出的<strong>Swap</strong>行中所看到的，系统上没有活动交换。</p><h2 id="第2步-检查硬盘驱动器分区上的可用空间"><a href="#第2步-检查硬盘驱动器分区上的可用空间" class="headerlink" title="第2步 - 检查硬盘驱动器分区上的可用空间"></a>第2步 - 检查硬盘驱动器分区上的可用空间</h2><p>在我们创建交换文件之前，我们将检查当前的磁盘使用情况，以确保我们有足够的空间。 通过输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br><span class="line">OutputFilesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">udev            481M     0  481M   0% &#x2F;dev</span><br><span class="line">tmpfs            99M  656K   98M   1% &#x2F;run</span><br><span class="line">&#x2F;dev&#x2F;vda1        25G  1.4G   23G   6% &#x2F;</span><br><span class="line">tmpfs           493M     0  493M   0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs           5.0M     0  5.0M   0% &#x2F;run&#x2F;lock</span><br><span class="line">tmpfs           493M     0  493M   0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;vda15      105M  3.4M  102M   4% &#x2F;boot&#x2F;efi</span><br><span class="line">tmpfs            99M     0   99M   0% &#x2F;run&#x2F;user&#x2F;1000</span><br></pre></td></tr></table></figure><p>在这种情况下，带有<code>/</code>在<code>Mounted on</code>列上的设备是我们的磁盘。 在这个例子中我们有足够的空间（仅使用1.4G）。 您的用法可能会有所不同。</p><p>虽然对交换空间的适当大小有很多意见，但这实际上取决于您的个人偏好和您的应用程序要求。 通常，等于或加倍系统RAM的量是一个很好的起点。 另一个好的经验法则是，如果您只是将其用作RAM后备，那么任何超过4G的交换都可能是不必要的。</p><h2 id="第3步-创建交换文件"><a href="#第3步-创建交换文件" class="headerlink" title="第3步 - 创建交换文件"></a>第3步 - 创建交换文件</h2><p>现在我们知道了可用的硬盘空间，我们可以在文件系统上创建一个交换文件。 我们将在根（/）目录中分配一个我们想要的交换大小的文件，称为<code>swapfile</code> 。</p><p>创建交换文件的最佳方法是使用<code>fallocate</code>程序。 此命令立即创建指定大小的文件。</p><p>由于我们示例中的服务器具有1G的RAM，因此我们将在本指南中创建1G文件。 调整此项以满足您自己的服务器的需求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fallocate -l 1G &#x2F;swapfile</span><br></pre></td></tr></table></figure><p>我们可以通过输入以下内容来验证是否保留了正确的空间量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -lh &#x2F;swapfile</span><br><span class="line">-rw-r--r-- 1 root root 1.0G Apr 25 11:14 &#x2F;swapfile</span><br></pre></td></tr></table></figure><p>我们的文件创建时留出了正确的空间。</p><h2 id="第4步-启用交换文件"><a href="#第4步-启用交换文件" class="headerlink" title="第4步 - 启用交换文件"></a>第4步 - 启用交换文件</h2><p>现在我们有一个正确大小的文件，我们需要实际将其转换为交换空间。</p><p>首先，我们需要锁定文件的权限，以便只有具有<strong>root</strong>权限的用户才能读取内容。 这可以防止普通用户访问该文件，这会产生重大的安全隐患。</p><p>通过键入以下内容使该文件只能由<strong>root</strong>访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 600 &#x2F;swapfile</span><br></pre></td></tr></table></figure><p>键入以下命令验证权限更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -lh &#x2F;swapfile</span><br><span class="line">Output-rw------- 1 root root 1.0G Apr 25 11:14 &#x2F;swapfile</span><br></pre></td></tr></table></figure><p>如您所见，只有<strong>root</strong>用户启用了读写标志。</p><p>我们现在可以通过输入以下内容将文件标记为交换空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkswap &#x2F;swapfile</span><br><span class="line">OutputSetting up swapspace version 1, size &#x3D; 1024 MiB (1073737728 bytes)</span><br><span class="line">no label, UUID&#x3D;6e965805-2ab9-450f-aed6-577e74089dbf</span><br></pre></td></tr></table></figure><p>标记文件后，我们可以启用交换文件，允许我们的系统开始使用它：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapon &#x2F;swapfile</span><br></pre></td></tr></table></figure><p>输入以下内容验证交换是否可用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo swapon --show</span><br><span class="line">OutputNAME      TYPE  SIZE USED PRIO</span><br><span class="line">&#x2F;swapfile file 1024M   0B   -2</span><br></pre></td></tr></table></figure><p>我们可以再次检查<code>free</code>工具的输出以证实我们的发现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">free -h</span><br><span class="line">Output              total        used        free      shared  buff&#x2F;cache   available</span><br><span class="line">Mem:           985M         84M        220M        680K        680M        722M</span><br><span class="line">Swap:          1.0G          0B        1.0G</span><br></pre></td></tr></table></figure><p>我们的交换已成功设置，我们的操作系统将在必要时开始使用它。</p><h2 id="第5步-使交换文件永久化"><a href="#第5步-使交换文件永久化" class="headerlink" title="第5步 - 使交换文件永久化"></a>第5步 - 使交换文件永久化</h2><p>我们最近的更改已启用当前会话的交换文件。 但是，如果我们重新启动，服务器将不会自动保留交换设置。 我们可以通过将交换文件添加到<code>/etc/fstab</code>文件来更改此设置。</p><p>备份<code>/etc/fstab</code>文件，以防出现任何问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp &#x2F;etc&#x2F;fstab &#x2F;etc&#x2F;fstab.bak</span><br></pre></td></tr></table></figure><p>键入以下命令，将交换文件信息添加到<code>/etc/fstab</code>文件的末尾：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;&#x2F;swapfile none swap sw 0 0&#39; | sudo tee -a &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure><p>接下来，我们将查看一些我们可以更新的设置以调整我们的交换空间。</p><h2 id="第6步-调整您的交换设置"><a href="#第6步-调整您的交换设置" class="headerlink" title="第6步 - 调整您的交换设置"></a>第6步 - 调整您的交换设置</h2><p>您可以配置一些选项，这些选项会在处理交换时对系统的性能产生影响。</p><h3 id="调整Swappiness属性"><a href="#调整Swappiness属性" class="headerlink" title="调整Swappiness属性"></a>调整Swappiness属性</h3><p><code>swappiness</code>参数配置系统将数据从RAM交换到交换空间的频率。 这是介于0和100之间的值，表示百分比。</p><p>值接近于零时，除非绝对必要，否则内核不会将数据交换到磁盘。 请记住，与交换文件的交互是“昂贵的”，因为它们比与RAM的交互花费更长的时间，并且它们可能导致性能的显着降低。 告诉系统不要太依赖交换通常会使您的系统更快。</p><p>接近100的值将尝试将更多数据放入交换中以努力保持更多RAM空间。 根据应用程序的内存配置文件或服务器的使用情况，在某些情况下可能会更好。</p><p>我们可以通过输入以下内容来查看当前的swappiness值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness</span><br><span class="line">Output60</span><br></pre></td></tr></table></figure><p>对于桌面，swappiness设置为60并不是一个糟糕的值。 对于服务器，您可能希望将其移近0。</p><p>我们可以使用<code>sysctl</code>命令将swappiness设置为不同的值。</p><p>例如，要将swappiness设置为10，我们可以键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl vm.swappiness&#x3D;10</span><br><span class="line">Outputvm.swappiness &#x3D; 10</span><br></pre></td></tr></table></figure><p>此设置将持续到下次重新引导。 我们可以通过在<code>/etc/sysctl.conf</code>文件中添加该行来自动设置此值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;sysctl.conf</span><br></pre></td></tr></table></figure><p>在底部，您可以添加：</p><p>/etc/sysctl.conf中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.swappiness&#x3D;10</span><br></pre></td></tr></table></figure><p>完成后保存并关闭文件。</p><h3 id="调整缓存压力设置"><a href="#调整缓存压力设置" class="headerlink" title="调整缓存压力设置"></a>调整缓存压力设置</h3><p>您可能想要修改的另一个相关值是<code>vfs_cache_pressure</code> 。 此设置配置系统将选择多少缓存<em>inode</em>和<em>dentry</em>信息而不是其他数据。</p><p>基本上，这是关于文件系统的访问数据。 这通常是非常昂贵的查询和非常频繁的请求，所以这是你的系统缓存的一个很好的事情。 您可以通过再次查询<code>proc</code>文件系统来查看当前值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;vfs_cache_pressure</span><br><span class="line">Output100</span><br></pre></td></tr></table></figure><p>由于它当前已配置，我们的系统会过快地从缓存中删除inode信息。 我们可以通过键入以下内容将其设置为更保守的设置（如50）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl vm.vfs_cache_pressure&#x3D;50</span><br><span class="line">Outputvm.vfs_cache_pressure &#x3D; 50</span><br></pre></td></tr></table></figure><p>同样，这仅适用于我们当前的会话。 我们可以通过将其添加到配置文件来改变它，就像我们使用swappiness设置一样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;sysctl.conf</span><br></pre></td></tr></table></figure><p>在底部，添加指定新值的行：</p><p>/etc/sysctl.conf中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.vfs_cache_pressure&#x3D;50</span><br></pre></td></tr></table></figure><p>完成后保存并关闭文件。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>按照本指南中的步骤将为您提供一些Wheezy空间，否则会导致内存不足异常。 交换空间在避免一些常见问题方面非常有用。</p><p>如果遇到OOM（内存不足）错误，或者如果发现系统无法使用所需的应用程序，最佳解决方案是优化应用程序配置或升级服务器。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当时建系统的时候交换空间给了1G，太小了，导致编译程序的时候一旦RAM满了就会卡死，我不得不用-j1命令限制编译的线程数，这样很慢。&lt;/p&gt;
&lt;p&gt;因而我们可以扩大交换空间，这样，内存满的时候他可以自动把一些静态的缓存放到这里面避免卡死。&lt;/p&gt;
&lt;p&gt;我也是小白，试了很多</summary>
      
    
    
    
    <category term="工具技能" scheme="https://www.jaylee.top/categories/%E5%B7%A5%E5%85%B7%E6%8A%80%E8%83%BD/"/>
    
    
    <category term="Ubuntu" scheme="https://www.jaylee.top/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>书单完成时</title>
    <link href="https://www.jaylee.top/2021/01/04/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/%E4%B9%A6%E5%8D%95%E5%AE%8C%E6%88%90%E6%97%B6/"/>
    <id>https://www.jaylee.top/2021/01/04/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/%E4%B9%A6%E5%8D%95%E5%AE%8C%E6%88%90%E6%97%B6/</id>
    <published>2021-01-04T04:57:14.000Z</published>
    <updated>2021-06-24T15:46:08.772Z</updated>
    
    <content type="html"><![CDATA[<p>kindle</p><ul><li>海边的卡夫卡</li><li>我们仨</li><li>解忧杂货店</li><li>月亮与六便士</li><li>绿山墙的安妮</li><li>小王子</li><li>自控力</li></ul><p>纸质</p><ul><li>当我跑步的时候我在想些什么</li><li><strong>C++ Primer</strong>!!!!</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;kindle&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;海边的卡夫卡&lt;/li&gt;
&lt;li&gt;我们仨&lt;/li&gt;
&lt;li&gt;解忧杂货店&lt;/li&gt;
&lt;li&gt;月亮与六便士&lt;/li&gt;
&lt;li&gt;绿山墙的安妮&lt;/li&gt;
&lt;li&gt;小王子&lt;/li&gt;
&lt;li&gt;自控力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;纸质&lt;/p&gt;
&lt;ul</summary>
      
    
    
    
    <category term="生活随笔" scheme="https://www.jaylee.top/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="书单" scheme="https://www.jaylee.top/tags/%E4%B9%A6%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>【ROS】transform变换矩阵</title>
    <link href="https://www.jaylee.top/2020/12/29/TODO/%E3%80%90ROS%E3%80%91tf/"/>
    <id>https://www.jaylee.top/2020/12/29/TODO/%E3%80%90ROS%E3%80%91tf/</id>
    <published>2020-12-29T13:39:44.000Z</published>
    <updated>2021-07-12T14:51:13.162Z</updated>
    
    <content type="html"><![CDATA[<p>学习视频：<a href="https://www.bilibili.com/video/BV1mJ411R7Ni?p=31">https://www.bilibili.com/video/BV1mJ411R7Ni?p=31</a></p><p><em>之前零零碎碎了解了很多，但是都没系统性的学习和实现，在这里详细的总结一下每个知识，加强记忆</em></p><h2 id="描述规范："><a href="#描述规范：" class="headerlink" title="描述规范："></a><strong>描述规范：</strong></h2><ol><li>source、target frame是在<strong>进行坐标变换</strong>时的概念，source是坐标变换的源坐标系，target是目标坐标系。这个时候，这个变换代表的是<strong>坐标变换</strong>。</li><li>parent、child frame是在<strong>描述坐标系变换</strong>时的概念，parent是原坐标系，child是变换后的坐标系，这个时候这个变换<strong>描述的是坐标系变换</strong>，也是child坐标系在parent坐标系下的描述。</li><li>a frame到b frame的坐标系变换（frame transform），也表示了b frame在a frame的姿态描述，也代表了把一个点在b frame里坐标变换成在a frame里坐标的<strong>坐标变换</strong>。</li><li>从parent到child的坐标系变换（frame transform）等同于把一个点从child坐标系向parent坐标系的<strong>坐标变换</strong>，等于child坐标系在parent frame坐标系的姿态描述。</li></ol><p>二者其实是等价的, 坐标系变换会反转一下,本子上依然是坐标系原点的坐标变换,但是该坐标系中的坐标依赖于它,因此会反一下,不难理解.</p><h2 id="坐标变换举例"><a href="#坐标变换举例" class="headerlink" title="坐标变换举例"></a><strong>坐标变换举例</strong></h2><ul><li><p>我记忆，为了防止混淆，都以坐标变换为基础，而不在考虑坐标系变换的角度，也不要用旋转平移的动态视角去记忆。即统一利用描述规范中的1,4点进行记忆，编程时不易出错</p></li><li><center><img src="file:///home/jlee/文档/github_repositories/Blog/source/_posts/坐标变换/image-20201113151857377.png?lastModify=1612318184" alt="image-20201113151857377" style="zoom: 80%;" div></center></li><li><p>现在我们要将局部坐标系O‘下的P点坐标（记为P_O’ ）转换到全局坐标系O下，即获得全局坐标系O的P点坐标(记为P_O) 。按照规范1来讲，O‘是source，O是target</p></li><li><p>首先我们要获取变换矩阵transform，记为T_O_O’，意味着从O‘到O坐标系的坐标变换矩阵。transform矩阵的参数本质也是个pose，是局部坐标系O’ 在全局坐标系O中的pose，即设置translate参数为<strong>O‘的坐标</strong>，rotation参数为<strong>O‘ x正半轴的角度</strong>（即逆时针为正）。——与之前旋转平移原坐标系到新坐标系一致。</p></li><li><p>$P_O’ =T_{OO’}*P_{O’}$ 类似与向量乘法，大部分库都是默认变换矩阵<strong>左乘</strong>，因此我们从右向左看。$P_{O’}$ 为<strong>列向量</strong>，因此 $T_{OO’}$ 是<strong>从右往左</strong>依次进行运算，表示<strong>从O’到O的坐标变换</strong>.</p></li><li><p>$P_a =T_{aO}T_{OO’}*P_{O’}$ 上式再左乘一个矩阵，从右往左看，$T_{aO}T_{OO’}=T_{aO’}$ , 下标依次抵消，最后就可以得到P在a坐标系下的坐标。</p></li></ul><h2 id="tf-tree"><a href="#tf-tree" class="headerlink" title="tf tree"></a>tf tree</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;学习视频：&lt;a href=&quot;https://www.bilibili.com/video/BV1mJ411R7Ni?p=31&quot;&gt;https://www.bilibili.com/video/BV1mJ411R7Ni?p=31&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;之前零零碎碎了解了</summary>
      
    
    
    
    <category term="编程学习" scheme="https://www.jaylee.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="ROS" scheme="https://www.jaylee.top/tags/ROS/"/>
    
  </entry>
  
  <entry>
    <title>【ROS】transform变换矩阵</title>
    <link href="https://www.jaylee.top/2020/12/29/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/ROS%E7%9B%B8%E5%85%B3/%E3%80%90ROS%E3%80%91tf/"/>
    <id>https://www.jaylee.top/2020/12/29/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/ROS%E7%9B%B8%E5%85%B3/%E3%80%90ROS%E3%80%91tf/</id>
    <published>2020-12-29T13:39:44.000Z</published>
    <updated>2021-07-12T14:51:13.443Z</updated>
    
    <content type="html"><![CDATA[<p>学习视频：<a href="https://www.bilibili.com/video/BV1mJ411R7Ni?p=31">https://www.bilibili.com/video/BV1mJ411R7Ni?p=31</a></p><p><em>之前零零碎碎了解了很多，但是都没系统性的学习和实现，在这里详细的总结一下每个知识，加强记忆</em></p><h2 id="描述规范："><a href="#描述规范：" class="headerlink" title="描述规范："></a><strong>描述规范：</strong></h2><ol><li>source、target frame是在<strong>进行坐标变换</strong>时的概念，source是坐标变换的源坐标系，target是目标坐标系。这个时候，这个变换代表的是<strong>坐标变换</strong>。</li><li>parent、child frame是在<strong>描述坐标系变换</strong>时的概念，parent是原坐标系，child是变换后的坐标系，这个时候这个变换<strong>描述的是坐标系变换</strong>，也是child坐标系在parent坐标系下的描述。</li><li>a frame到b frame的坐标系变换（frame transform），也表示了b frame在a frame的姿态描述，也代表了把一个点在b frame里坐标变换成在a frame里坐标的<strong>坐标变换</strong>。</li><li>从parent到child的坐标系变换（frame transform）等同于把一个点从child坐标系向parent坐标系的<strong>坐标变换</strong>，等于child坐标系在parent frame坐标系的姿态描述。</li></ol><p>二者其实是等价的, 坐标系变换会反转一下,本子上依然是坐标系原点的坐标变换,但是该坐标系中的坐标依赖于它,因此会反一下,不难理解.</p><h2 id="坐标变换举例"><a href="#坐标变换举例" class="headerlink" title="坐标变换举例"></a><strong>坐标变换举例</strong></h2><ul><li><p>我记忆，为了防止混淆，都以坐标变换为基础，而不在考虑坐标系变换的角度，也不要用旋转平移的动态视角去记忆。即统一利用描述规范中的1,4点进行记忆，编程时不易出错</p><img src="/2020/12/29/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/ROS%E7%9B%B8%E5%85%B3/%E3%80%90ROS%E3%80%91tf/code\blog\算法学习\坐标变换\image-20201113151857377.png" alt="image-20201113151857377" style="zoom:50%;"></li><li><p>现在我们要将局部坐标系O‘下的P点坐标（记为P_O’ ）转换到全局坐标系O下，即获得全局坐标系O的P点坐标(记为P_O) 。按照规范1来讲，O‘是source，O是target</p></li><li><p>首先我们要获取变换矩阵transform，记为T_O_O’，意味着从O‘到O坐标系的坐标变换矩阵。transform矩阵的参数本质也是个pose，是局部坐标系O’ 在全局坐标系O中的pose，即设置translate参数为<strong>O‘的坐标</strong>，rotation参数为<strong>O‘ x正半轴的角度</strong>（即逆时针为正）。——与之前旋转平移原坐标系到新坐标系一致。</p></li><li><p>$P_O’ =T_{OO’}*P_{O’}$ 类似与向量乘法，大部分库都是默认变换矩阵<strong>左乘</strong>，因此我们从右向左看。$P{O’}$ 为<strong>列向量</strong>，因此 $T{OO’}$ 是<strong>从右往左</strong>依次进行运算，表示<strong>从O’到O的坐标变换</strong>.</p></li><li><p>$P_a =T_{aO}T_{OO’}*P_{O’}$ 上式再左乘一个矩阵，从右往左看，$T_{aO}T_{OO’}=T_{aO’}$ , 下标依次抵消，最后就可以得到P在a坐标系下的坐标。</p></li></ul><h2 id="tf-tree"><a href="#tf-tree" class="headerlink" title="tf tree"></a>tf tree</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;学习视频：&lt;a href=&quot;https://www.bilibili.com/video/BV1mJ411R7Ni?p=31&quot;&gt;https://www.bilibili.com/video/BV1mJ411R7Ni?p=31&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;之前零零碎碎了解了</summary>
      
    
    
    
    <category term="编程学习" scheme="https://www.jaylee.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="ROS" scheme="https://www.jaylee.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/ROS/"/>
    
    
    <category term="ROS" scheme="https://www.jaylee.top/tags/ROS/"/>
    
    <category term="坐标变换" scheme="https://www.jaylee.top/tags/%E5%9D%90%E6%A0%87%E5%8F%98%E6%8D%A2/"/>
    
  </entry>
  
</feed>
